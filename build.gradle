

import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

group 'btn'
version '1.0-SNAPSHOT'
description 'Button User Transfer API'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'groovy'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'org.codehaus.groovy:groovy-all:2.4.10'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


def dropWizardVersion = '1.2.2'
dependencies {

    compile group: 'io.dropwizard', name: 'dropwizard-core', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-auth', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-jackson', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-jdbi', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-migrations', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-client', version: dropWizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-metrics', version: dropWizardVersion
    compile group: 'org.postgresql', name: 'postgresql', version: '9.3-1100-jdbc4'

    testCompile 'junit:junit:4.12'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.11'
    testCompile group: 'org.spockframework', name:'spock-core', version:'1.1-groovy-2.4'
}

mainClassName = 'com.btn.bolt.application.BoltApplication'

run {
    args = ['server', 'src/main/resources/config.yaml']
}

run.onlyIf {
    def configFile = new File( 'src/main/resources/config.yaml' )

    if (!configFile.exists()) {
        project.logger.error("Aborting run command because the application config file does not exist")
        return false
    }
    return true
}

test {
    testLogging {
        events "passed", "skipped","failed"
        showExceptions = true
        exceptionFormat = 'full'
    }
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': rootProject.version
        attributes 'Implementation-Vendor-Id': rootProject.group
        attributes 'Build-Time': ZonedDateTime.now(ZoneId.of("UTC")).format(DateTimeFormatter.ISO_ZONED_DATE_TIME)
        attributes 'Built-By': InetAddress.localHost.hostName
        attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        attributes 'Main-Class': mainClassName
    }
    archiveName 'bolt-api.jar'
}
